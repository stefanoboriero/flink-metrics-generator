receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

exporters:
  kafka/exporter:
    brokers:
      - kafka:19092
    protocol_version: "3.9.0"
    encoding: otlp_json
    topic: traces
    auth:
      plain_text:
  prometheusremotewrite:
    endpoint: http://mimir:9090/api/v1/push


connectors:
  spanmetrics:
    histogram:
      explicit:
        buckets: [100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms]
    dimensions:
      - name: http.method
        default: GET
      - name: http.status_code
    exemplars:
      enabled: true
    exclude_dimensions: ['status.code']
    dimensions_cache_size: 1000
    aggregation_temporality: "AGGREGATION_TEMPORALITY_CUMULATIVE"
    metrics_flush_interval: 15s
    metrics_expiration: 5m
    events:
      enabled: true
      dimensions:
        - name: exception.type
        - name: exception.message
    resource_metrics_key_attributes:
      - service.name

service:
  pipelines:
    traces:
      receivers: [otlp]
      exporters: [kafka/exporter, spanmetrics]
    metrics:
      receivers: [otlp, spanmetrics]
      exporters: [prometheusremotewrite]
